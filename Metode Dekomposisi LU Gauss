import numpy as np

def LU_decomposition(A):
    n = len(A)
    L = np.zeros((n, n))
    U = np.zeros((n, n))

    for i in range(n):
        L[i][i] = 1

    for k in range(n):
        U[k][k] = A[k][k]
        for j in range(k+1, n):
            L[j][k] = A[j][k] / U[k][k]
            U[k][j] = A[k][j]
        for i in range(k+1, n):
            for j in range(k+1, n):
                A[i][j] = A[i][j] - L[i][k] * U[k][j]

    return L, U

def solve_linear_system_LU(A, b):
    L, U = LU_decomposition(A)
    n = len(A)
    y = np.zeros(n)
    x = np.zeros(n)

    # Solve Ly = b
    for i in range(n):
        y[i] = b[i] - sum(L[i][j] * y[j] for j in range(i))

    # Solve Ux = y
    for i in range(n-1, -1, -1):
        x[i] = (y[i] - sum(U[i][j] * x[j] for j in range(i+1, n))) / U[i][i]

    return x

# Contoh penggunaan:
A = np.array([[2, 1], [1, -3]])
b = np.array([4, -7])
print("Solution using LU Gauss method:", solve_linear_system_LU(A, b))
